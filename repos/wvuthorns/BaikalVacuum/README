Cactus Code Thorn BaikalVacuum
Authors: Zachariah B. Etienne
         zachetie **at** gmail **dot* com
	 Ken Sible (NRPy+ C-code kernel optimizations)
Maintainer(s): Einstein Toolkit
License      : BSD 2-Clause
--------------------------------------------------------------------------

1. Purpose

This thorn contains an implementation of Einstein's 
equations of general relativity written in the BSSN 
initial value problem (3+1) formulation. In particular
it encodes both the right-hand sides of the BSSN 
equations as well as the Hamiltonian and momentum 
constraint equations in finite-difference form.

The Baikal thorn includes the T^{\mu\nu} source terms
within the BSSN right-hand sides and constraint 
equations, and BaikalVacuum does not. Thus the latter
thorn should be used in vacuum (e.g., black hole or
binary black hole) spacetimes, and the former in
the context of more generic (e.g., single or
binary neutron star) spacetimes.

Encoding the equations into highly optimized C code
was provided courtesy the NRPy+ ("Python-based code 
generation for Numerical Relativity... and beyond!") 
Python code generation package, which itself depends
upon SymPy for symbolic algebra. Ken Sible is
responsible for many of the low-level optimizations
that have helped the BaikalVacuum & Baikal thorns
perform exceptionally well on modern-day, 
SIMD-capable CPUs.

NRPy+ can be found/downloaded from here:
https://github.com/zachetienne/nrpytutorial

The git hash for NRPy+ that was used to generate
this thorn is:
d88f4c916f22c7d6a3d358341b073f4e9662dda0

After checking out the appropriate git hash,
simply run (from the nrpytutorial folder):
python3 BaikalETK/BaikalETK_main_codegen_driver.py
... and Baikal & BaikalVacuum will be
generated and output to Baikal/ & BaikalVacuum/
respectively.

2. Documentation

Full documentation may be found in the NRPy+
Jupyter notebook tutorial:
* Tutorial-BaikalETK.ipynb ,
which is part of the NRPy+ source code on github.

The latest version of the above notebook is located 
in the Baikal/doc/ directory.

The notebooks also generate clickable LaTeX'ed versions
   of themselves, and compile the LaTeX into PDFs.

3. Example parameter file

Example parameter files used in validating BaikalVacuum
(comparing against the trusted ML_BSSN thorn) may be found 
in par/

4. Note on automatic code generation

This thorn is automatically generated by running
python3 BaikalETK/BaikalETK_main_codegen_driver.py
from within the nrpytutorial/ directory, where again
nrpytutorial may be downloaded from:
https://github.com/zachetienne/nrpytutorial

5. Special acknowledgements

Thanks to the writers of the McLachlan and Lean BSSN thorns,
which provided many good ideas in the writing of Baikal
and BaikalVacuum.

Thanks also to Roland Haas for answering many implementation 
questions and providing valuable insights and advice.

Finally, thanks to Helvi Witek for reviewing this thorn and
helping the authors understand and appreciate Lean even more.
