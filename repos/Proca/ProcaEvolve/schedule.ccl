# Schedule definitions for thorn ProcaEvolve

# Schedule Proca evolution if evolution_method=ProcaEvolve
if (CCTK_EQUALS (evolution_method, "ProcaEvolve")) {

  STORAGE: rhs_Ei rhs_Ai rhs_Aphi rhs_Zeta
  STORAGE: hmetric conf_fac_chi trk

  schedule Proca_InitSymBound at BASEGRID
  {
    LANG: Fortran
    OPTIONS: META
  } "Schedule symmetries"

  schedule Proca_zero_rhs at BASEGRID after Proca_InitSymBound
  {
    LANG: Fortran
  } "set all rhs functions to zero to prevent spurious nans"

  schedule Proca_RegisterVars in MoL_Register
  {
    LANG: C
    OPTIONS: META
  } "Register variables for MoL"

  schedule Proca_calc_rhs in MoL_CalcRHS as Proca_CalcRHS
  {
    LANG: Fortran
  } "MoL RHS calculation for Proca variables"

  schedule Proca_calc_rhs_bdry in MoL_CalcRHS as Proca_CalcRHS_Bdry \
           after Proca_CalcRHS
  {
    LANG: Fortran
  } "MoL boundary RHS calculation for Proca variables"


  schedule Proca_Boundaries in MoL_PostStep
  {
    LANG: Fortran
    OPTIONS: LEVEL
    SYNC: ProcaBase::Ei
    SYNC: ProcaBase::Ai
    SYNC: ProcaBase::Aphi
    SYNC: ProcaBase::Zeta
  } "MoL boundary enforcement for Proca variables"

  schedule GROUP ApplyBCs as Proca_ApplyBCs in MoL_PostStep after Proca_Boundaries
  {
  } "Apply boundary conditions"


  schedule Proca_calc_Tmunu in AddToTmunu as Proca_AddToTmunu
  {
    LANG: Fortran
  } "Compute the energy-momentum tensor"

}
