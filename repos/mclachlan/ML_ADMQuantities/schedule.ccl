# File produced by Kranc

STORAGE: ML_Madm[timelevels]

STORAGE: ML_Jadm[timelevels]
schedule ML_ADMQuantities_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule ML_ADMQuantities_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule group ML_ADMQuantities_calculate_group in MoL_PseudoEvolution after MoL_PostStep
{
} "ML_ADMQuantities_calculate"

schedule ML_ADMQuantities_calculate in ML_ADMQuantities_calculate_group
{
  LANG: C
  READS: TmunuBase::stress_energy_state
  READS: grid::x(Everywhere)
  READS: grid::y(Everywhere)
  READS: grid::z(Everywhere)
  READS: ML_BSSN::At11(Everywhere)
  READS: ML_BSSN::At12(Everywhere)
  READS: ML_BSSN::At13(Everywhere)
  READS: ML_BSSN::At22(Everywhere)
  READS: ML_BSSN::At23(Everywhere)
  READS: ML_BSSN::At33(Everywhere)
  READS: ML_BSSN::Xt1(Everywhere)
  READS: ML_BSSN::Xt2(Everywhere)
  READS: ML_BSSN::Xt3(Everywhere)
  READS: ML_BSSN::alpha(Everywhere)
  READS: ML_BSSN::phi(Everywhere)
  READS: ML_BSSN::gt11(Everywhere)
  READS: ML_BSSN::gt12(Everywhere)
  READS: ML_BSSN::gt13(Everywhere)
  READS: ML_BSSN::gt22(Everywhere)
  READS: ML_BSSN::gt23(Everywhere)
  READS: ML_BSSN::gt33(Everywhere)
  READS: ML_BSSN::beta1(Everywhere)
  READS: ML_BSSN::beta2(Everywhere)
  READS: ML_BSSN::beta3(Everywhere)
  READS: ML_BSSN::trK(Everywhere)
  READS: TmunuBase::eTtt(Everywhere)
  READS: TmunuBase::eTxx(Everywhere)
  READS: TmunuBase::eTxy(Everywhere)
  READS: TmunuBase::eTxz(Everywhere)
  READS: TmunuBase::eTyy(Everywhere)
  READS: TmunuBase::eTyz(Everywhere)
  READS: TmunuBase::eTzz(Everywhere)
  READS: TmunuBase::eTtx(Everywhere)
  READS: TmunuBase::eTty(Everywhere)
  READS: TmunuBase::eTtz(Everywhere)
  WRITES: ML_ADMQuantities::Jadm1(Interior)
  WRITES: ML_ADMQuantities::Jadm2(Interior)
  WRITES: ML_ADMQuantities::Jadm3(Interior)
  WRITES: ML_ADMQuantities::Madm(Interior)
} "ML_ADMQuantities_calculate"

schedule ML_ADMQuantities_calculate_SelectBCs in ML_ADMQuantities_calculate_bc_group
{
  LANG: C
  OPTIONS: level
  SYNC: ML_Jadm
  SYNC: ML_Madm
} "ML_ADMQuantities_calculate_SelectBCs"

schedule group ApplyBCs as ML_ADMQuantities_calculate_ApplyBCs in ML_ADMQuantities_calculate_bc_group after ML_ADMQuantities_calculate_SelectBCs
{
} "Apply BCs for groups set in ML_ADMQuantities_calculate"

schedule group ML_ADMQuantities_calculate_bc_group in ML_ADMQuantities_calculate_group after ML_ADMQuantities_calculate
{
} "ML_ADMQuantities_calculate"

schedule group ML_ADMQuantities_calculate_bc_group in MoL_PseudoEvolutionBoundaries after MoL_PostStep
{
} "ML_ADMQuantities_calculate"

schedule ML_ADMQuantities_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
} "select boundary conditions"

schedule ML_ADMQuantities_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule ML_ADMQuantities_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"
schedule group ApplyBCs as ML_ADMQuantities_ApplyBCs in MoL_PostStep after ML_ADMQuantities_SelectBoundConds
{
} "Apply boundary conditions controlled by thorn Boundary"
