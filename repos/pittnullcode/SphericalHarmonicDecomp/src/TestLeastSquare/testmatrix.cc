#include <iostream>
#include <complex>
#include "matrix.hh"

using namespace std;
using namespace decomp_matrix_class;

int main(void)
{
  double data[] = {0,1,2,1.0/3.0,1.0/5.0,1.0/11.0,72,45,96};
  double data2[] = {1,2,3,4,5,
                   6,7,8,9,10,
                   11,12,13,14,7};

  matrix <double> m(3,3,data);
  m.print();
  m.invert();
  m.print();

  matrix <double> p(3,5,data2);
  p.print();

  p.row_reduce();
  p.print();

  // a random 11x11 matrix
complex<double> cdata[] =
    {complex<double>(5.0536308478521766498,+9.5132211635839991817),
     complex<double>(2.7757576842002857773,+8.8251353919198184232),
     complex<double>(9.6436958823033419441,+2.2256879857689599923),
     complex<double>(4.0709632740046841247,+5.2211146710742939056),
     complex<double>(9.3097483781930569792,+2.0372797458897322832),
     complex<double>(4.1512938059925035568,+9.7137504771647130878),
     complex<double>(6.4471740192966374082,+4.2501830069486601180),
     complex<double>(8.2242944110938553504,+3.1840884469631490852),
     complex<double>(1.6601299110257190954,+8.6050851181079224283),
     complex<double>(2.8086049103863589020,+4.0472726935125043155),
     complex<double>(1.0692482580180451354,+6.8784414824676042094),
     complex<double>(8.3215979937507242996,+1.8409325046995522259),
     complex<double>(9.9563117735876001919,+8.4426224934782886662),
     complex<double>(6.8574400896415252095,+6.9924524019220391918),
     complex<double>(9.3533853212109395587,+7.8676016537948804577),
     complex<double>(5.1518644168483940597,+3.4388909263208417184),
     complex<double>(2.2496426925484295237,+3.8642794436713178374),
     complex<double>(7.0171224701664525227,+9.1814566233542384989),
     complex<double>(5.3755231321720652282,+3.3086219842986071666),
     complex<double>(5.3144670264059686025,+8.4883944773951979848),
     complex<double>(7.0530386522330721394,+3.1422073243001163925),
     complex<double>(4.0559500029873350573,+6.5363264929021145862),
     complex<double>(1.7075173771233449772,+4.7467297948366480160),
     complex<double>(4.1146331348612697118,+7.9425643333044010214),
     complex<double>(3.5169707666999716105,+5.4844197317419109829),
     complex<double>(2.4225948859037570400,+5.3410303996351930794),
     complex<double>(5.5337366781174426266,+3.3996574179708860417),
     complex<double>(5.8452809502402010926,+6.8791399442469347244),
     complex<double>(8.8080215150662144153,+3.5324916641244743204),
     complex<double>(5.5362691777420283845,+3.0133420037782742697),
     complex<double>(5.0956100913470465996,+2.6223485254435937051),
     complex<double>(7.9073322619970387230,+3.1919845507124906786),
     complex<double>(1.8366581308043814460,+2.1215682110020107232),
     complex<double>(3.4488663899135934065,+5.4458196095794880472),
     complex<double>(5.7742448425130729383,+5.5210531122593219710),
     complex<double>(8.8748246227296482213,+9.8389928758023409922),
     complex<double>(6.2097987534863243831,+7.4354638042348852166),
     complex<double>(2.1546766799064921964,+4.0014793300444160321),
     complex<double>(3.1229215184722367861,+2.8299597283980251142),
     complex<double>(2.0051985262717033610,+2.2190357665323706292),
     complex<double>(9.1468211859845149616,+8.4964679866423486452),
     complex<double>(4.9867456063251967349,+1.6411471924896731893),
     complex<double>(3.1415562925631368977,+4.5967628401538676860),
     complex<double>(5.2979663341358289893,+2.1129444949359799987),
     complex<double>(4.8729034527007479822,+3.0619704066847395638),
     complex<double>(3.2323294613140064572,+8.4078431387931048756),
     complex<double>(1.6561996012857987778,+7.4359785377894476722),
     complex<double>(6.7878594272511927828,+4.1215464047355099161),
     complex<double>(3.9615238517002995842,+2.3599104870249884358),
     complex<double>(6.1082486128118713856,+7.0820328756085761566),
     complex<double>(3.6585758636972295696,+6.7974448231838196233),
     complex<double>(5.5125617088644762260,+5.5444034811000930350),
     complex<double>(4.3072143748924655156,+6.0500778175336446285),
     complex<double>(4.3462668153203008420,+6.0505767830231581478),
     complex<double>(5.6951783958369677746,+8.4229039228455622308),
     complex<double>(7.5761170714950240175,+3.2658417565643008354),
     complex<double>(1.2273142931007558048,+7.4689557467540956656),
     complex<double>(1.5940787953347685311,+9.6576352344566204967),
     complex<double>(9.9747433250923132225,+4.2465799141730935266),
     complex<double>(5.4937645146029537692,+3.9736050532592135449),
     complex<double>(9.4058812034065360846,+6.8112827194686515265),
     complex<double>(3.9032575547809591893,+5.4943221704890234148),
     complex<double>(7.7856305132069934358,+6.6114018015695410187),
     complex<double>(6.6232877127686936025,+3.6082208451937238127),
    complex<double>(1.0012790277640505517,+7.2493077316293898277),
     complex<double>(1.5827747519101832113,+3.1166733653997012471),
     complex<double>(7.3563192637204752118,+8.3648544854749543062),
     complex<double>(9.2848231006553157970,+2.5490900380250879781),
     complex<double>(5.4387725051686611764,+1.6461784633823454648),
     complex<double>(7.4467330367471569914,+8.2402939498037704265),
     complex<double>(7.4351171687265569365,+5.3658240761298305523),
     complex<double>(3.7246063932291231662,+3.3055972479874806742),
     complex<double>(7.4232029709978054379,+7.0689652543141949209),
     complex<double>(6.8071820345251036609,+8.6453076529848698590),
     complex<double>(3.3820399314141473278,+6.5135015130748216717),
     complex<double>(6.1249539183132752875,+6.3221890529117070398),
     complex<double>(7.9050804339225043285,+1.8937554587500186789),
     complex<double>(3.5388720002545669138,+2.6116601022317760139),
     complex<double>(2.5706562896858861553,+6.8298648915632353441),
     complex<double>(3.8506464989362088668,+3.9600879432654880585),
     complex<double>(3.0140947740637418515,+8.2403228802047804305),
     complex<double>(7.9812653356239102007,+3.1957618758432348014),
     complex<double>(5.6187469418984586154,+5.3357167318454004213),
     complex<double>(3.6189189181960139178,+5.4308815216598947843),
     complex<double>(7.1559769048499638111,+2.2690907119386516112),
     complex<double>(2.0560197504041235864,+7.9056891094762736408),
     complex<double>(9.4604115888263174481,+4.5567019193006490555),
     complex<double>(8.7846923287206376871,+8.4275353665224071402),
     complex<double>(9.2289579666330458653,+7.7319798259894925604),
     complex<double>(8.5072298104852942940,+3.5635676728752498003),
     complex<double>(9.6163093660980786866,+1.7623520758082479913),
     complex<double>(6.5597411395838177758,+6.1340026485718365651),
     complex<double>(2.6180526558843375782,+7.0986308900558264790),
     complex<double>(8.2923719432805761929,+3.2956265992466768690),
     complex<double>(5.0306745598109237140,+5.0604867773498397004),
     complex<double>(2.8913076021160132691,+7.6923848877480400886),
     complex<double>(8.1756847813008319074,+8.2925953319095739183),
     complex<double>(7.3190262366723769189,+1.5659549970806769447),
     complex<double>(1.5702806195672560645,+4.3378204370037395317),
     complex<double>(2.6455163903100379734,+8.6017327710642680021),
     complex<double>(4.0896690732055245368,+7.1522575554181257079),
     complex<double>(8.4414147836111755957,+4.0209129305872556678),
     complex<double>(3.3248623664591902952,+9.4586460785737615472),
     complex<double>(2.9168053118216106696,+1.3406527343686930819),
     complex<double>(3.3992286301863379923,+2.6655904482960609675),
     complex<double>(7.7399443230510721571,+3.6248455078292840716),
     complex<double>(2.5422404503963520074,+4.1271052895707307620),
     complex<double>(3.6256196203795128406,+9.6937374035306618781),
     complex<double>(4.4113985116136864733,+4.4910699741140447482),
     complex<double>(5.4874951418439098000,+6.1478251850608617602),
     complex<double>(2.2085850309918329183,+7.3202035651882677930),
     complex<double>(8.3751639446790568616,+7.7847678355834758776),
     complex<double>(2.4811336905851003438,+2.4617083339779761169),
     complex<double>(2.7739058356274647974,+5.3589945493279679349),
     complex<double>(3.6080118800949978997,+8.5591881094872255690),
     complex<double>(7.3563792093870632151,+1.0472840851423575018),
     complex<double>(6.7228774979767122579,+8.4007479872185810571),
     complex<double>(4.5948714526319659000,+6.9415898624971442500),
     complex<double>(5.4891241248557638129,+1.4156669977753389175),
     complex<double>(3.2389345990113192258,+8.1871883480438852277),
     complex<double>(7.0758598693841484655,+5.6669543314371428960)};

  // and its inverse
 
complex<double> icdata[]=
    {complex<double>(-0.015137675834637327427,-0.046431891745764382486),
     complex<double>(0.0055554082398565948701,+0.073897384751226874128),
     complex<double>(0.053487737324839899307,+0.047408950894810250814),
     complex<double>(-0.043075584676896710739,-0.053527253904927661819),
     complex<double>(0.11057980646446279614,-0.14462087087131839963),
     complex<double>(0.026953719311337140307,+0.075026330322068388183),
     complex<double>(-0.012048624334530921487,+0.13872266243941102096),
     complex<double>(-0.090955734483127175825,+0.065025993101042792861),
     complex<double>(0.027057944715824792935,-0.084644465750174756628),
     complex<double>(0.050881581630685586284,-0.0095999220903509606517),
     complex<double>(-0.13600529223928387455,-0.094841111431352623395),
     complex<double>(0.056324479284424203784,-0.031192753201937139681),
     complex<double>(0.074939084285480462298,-0.044472791148806963093),
     complex<double>(-0.060948236958881625580,-0.041241029006080124335),
     complex<double>(0.050492395781106685631,+0.070005253664477700804),
     complex<double>(-0.10195331174500358768,+0.044165031671003512324),
     complex<double>(-0.039902107825304012126,-0.018922475904084456087),
     complex<double>(0.011251960898455339769,-0.077973603760765594506),
     complex<double>(0.032782767208439147515,-0.0037818615568096588788),
     complex<double>(-0.010887534747853954885,+0.084011284199771762015),
     complex<double>(-0.12433718853937244366,+0.010722499379312889929),
     complex<double>(0.10374509713199488663,+0.029743696442171847003),
     complex<double>(-0.016815923823619220109,-0.015450546038908438746),
     complex<double>(-0.025622986525778576891,-0.0088617421494232875387),
     complex<double>(0.049879813648195999742,+0.043800612469055774759),
     complex<double>(0.0051552363178142947644,-0.052265164631967175547),
     complex<double>(0.0076360986666888575695,-0.037605219779003399825),
     complex<double>(0.029477373015302620673,-0.015542456399223683772),
     complex<double>(0.025368791514033531256,+0.12691110657307052311),
     complex<double>(-0.030183370913399544586,+0.011544577716991565334),
     complex<double>(0.021162941681264879712,-0.052607683600547682339),
     complex<double>(0.057645940314485483196,+0.0096113604246532196796),
     complex<double>(-0.12093595478182653823,-0.018569603625378327770),
     complex<double>(-0.043076006921966509589,+0.081679826584174488435),
     complex<double>(0.0022702386381207824600,-0.017507651870746185007),
     complex<double>(-0.029603106801101381998,-0.077965042383182122751),
     complex<double>(-0.046182767111995622771,-0.023260048954151427136),
     complex<double>(0.029870733819099508387,+0.078617586480084642063),
     complex<double>(0.032602493977607046484,-0.038400309142504393960),
     complex<double>(0.042210525054346457217,-0.042854683207458720970),
     complex<double>(0.012600167127439404407,-0.019722040965708061804),
     complex<double>(-0.039926140149957820469,+0.036880469479200183753),
     complex<double>(0.032986258956178192263,-0.061650978008683425496),
     complex<double>(0.024424283885304816838,+0.055124465680789478062),
     complex<double>(0.085657973565908107277,-0.023742328618840111928),
     complex<double>(-0.011725750073578164974,-0.058773555727987495966),
     complex<double>(-0.042723748472334557917,+0.072571890284998010712),
     complex<double>(0.016576376358684342699,+0.059026086084116563347),
     complex<double>(-0.097793091208177106346,+0.12835357616046540051),
     complex<double>(0.049347813979106107954,-0.067576316137724913529),
     complex<double>(-0.033053274617911756437,+0.076427953618900965429),
     complex<double>(0.066006037601971253767,-0.093869087254300598291),
     complex<double>(0.042348628197758868369,+0.0016550714297787718874),
     complex<double>(-0.088127224747098532604,+0.021229863078944669171),
     complex<double>(0.0098554123775012854224,-0.096581831925121584846),
     complex<double>(-0.040643004784948127352,+0.00079798088882892790140),
     complex<double>(-0.032444555152234626137,+0.013143516501530497739),
     complex<double>(0.022221114183682660850,-0.081586322386092598489),
     complex<double>(-0.045168157459146033819,-0.0033420597995901242744),
     complex<double>(-0.038247038287271682145,-0.059980328871446172819),
     complex<double>(0.058392760357361172610,+0.00046873069080480488058),
     complex<double>(0.077153900237050395169,-0.013839531843196584353),
     complex<double>(0.027852302866220070671,+0.026553183583993909616),
     complex<double>(-0.0068068656161594323487,+0.0016682962208488584885),
     complex<double>(0.0075125324730869490151,+0.026831132733902936373),
     complex<double>(-0.020493062541897843014,+0.081863202043495952886),
     complex<double>(-0.046857906097847789911,+0.042768586198493779630),
     complex<double>(0.021463102667243951089,+0.023548804622952524161),
     complex<double>(0.079854154233659990527,-0.057143914488719236541),
     complex<double>(-0.089201147995737804140,-0.016788886699957321097),
     complex<double>(0.029372718118772683253,-0.12987214911249719727),
     complex<double>(0.018942065908251037606,+0.044726347042941943641),
     complex<double>(0.063541847016907279197,-0.0094546241603693999900),
     complex<double>(-0.068609166631249530794,+0.089718517438674540079),
     complex<double>(-0.071048193728446612441,-0.046233508654736144705),
     complex<double>(0.11879777021314887609,-0.016287185324975331931),
     complex<double>(-0.042479499783737702401,+0.048215553738107966626),
     complex<double>(0.038779914855454461334,+0.027583368542003447386),
     complex<double>(0.035783059535323183433,+0.036084685189360767670),
     complex<double>(-0.059250929806154963466,-0.069866942115419226304),
     complex<double>(0.063694012509470947379,+0.024174285126309227462),
     complex<double>(-0.054892034784799503535,-0.029123796680743240147),
     complex<double>(-0.064165449290129872801,+0.023679745337216546099),
     complex<double>(0.0013359391304540018864,-0.21308409918029670660),
     complex<double>(0.037151277158989518275,+0.034780424220535786658),
     complex<double>(-0.056364881670370775768,+0.036174144806959518557),
     complex<double>(-0.040734345931997493218,+0.012962659266456757273),
     complex<double>(0.12805329581824076382,+0.11450346985798899140),
     complex<double>(0.049304602453108404678,-0.079363052909135368573),
     complex<double>(-0.018246987213024974549,-0.069272433313639640803),
     complex<double>(-0.045717136209549204625,+0.15751080608358394068),
     complex<double>(0.12014941975815497754,+0.020260563935830200651),
     complex<double>(-0.030143464210502169414,+0.18568420538470467559),
     complex<double>(-0.027824722480183425856,-0.015830142898607963706),
     complex<double>(-0.19552336434498262463,-0.0098671533671428066630),
     complex<double>(0.013315951744794388767,-0.11949318283141856057),
     complex<double>(0.10699511228479126253,+0.013867802168405529599),
     complex<double>(-0.041893006559627585873,+0.055515833653303584525),
     complex<double>(0.10729179028421224283,-0.12078205719194976814),
     complex<double>(-0.054518725955997453776,+0.012932155302088070219),
     complex<double>(-0.048159694713671127238,+0.018211814416929436990),
     complex<double>(0.071968042345498587092,+0.018981952602965252799),
     complex<double>(0.00075416800277983886751,-0.022335431340499087219),
     complex<double>(0.096394384488127807787,+0.070901778818513921737),
     complex<double>(-0.066124882773891893090,-0.051765850886055997801),
     complex<double>(0.014123065031606764289,-0.0023407427781259471974),
     complex<double>(0.0067345139305594310278,-0.024884695046175182095),
     complex<double>(0.048638148503511890493,+0.0066999388974258598675),
     complex<double>(-0.0060470506934192625745,-0.011391556497390597612),
     complex<double>(-0.038837321992638012834,-0.020425539860754812715),
     complex<double>(-0.0080644520866935534978,+0.0050184296434563511971),
     complex<double>(-0.026617186898400118734,+0.013536387282645900623),
     complex<double>(-0.010838104929084562376,+0.028876013099552391568),
     complex<double>(-0.022882745767487254620,-0.024907581953384671534),
     complex<double>(0.082178223882787681069,-0.11794880700682963251),
     complex<double>(0.0077833180158223850302,+0.060592391672988459378),
     complex<double>(-0.0061510491496773490311,+0.091595382766713918943),
     complex<double>(0.0011916196165086621831,+0.013001955773494689072),
     complex<double>(-0.019674407611267125030,-0.030632667095451910035),
     complex<double>(0.038981823643937031906,-0.030726095399779597580),
     complex<double>(-0.047879402782380863524,-0.045803918663070793500)};

  matrix< complex<double> > cm(11,11, cdata);
  matrix< complex<double> > icm(11,11, icdata);
  const matrix< complex<double> > orig = cm;

  cm.invert();
  matrix< complex<double> > diff1 = cm - icm;

  diff1.clean_small_numbers();
  cout << "Taking inverse of random 11x11 complex matrix and comparing with known inverse\n"
       "elements smaller than " << MATRIX_ELEMENT_ROUND_OFF_LIMIT << " set to zero"<< endl;
  diff1.print();
  cm.invert();
  cout << "taking inverse of inverse and comparing with original matrix" << endl;
  matrix< complex<double> > diff2 = cm - orig;
  diff2.clean_small_numbers();
  diff2.print();

  double rdata[] = 
    {5.9250331296338824412, 2.3501051899450988590, 4.9252728389343956784,
    4.0037174387053249936, 8.5761640842802069454, 4.8306967706803316384,
    8.9875956033421309133, 3.3157506243206729297, 1.0907015643957712173,
    6.0513569566001356658, 3.2813744264290209623, 2.6095764590914895113,
    6.7825222946288328686, 2.7091623992733179243, 5.2493073001908325878,
    8.6087376021907510456, 3.3683696589752968323, 7.2101423911263746466,
    1.9098682887410821553, 5.6048862398648019592, 4.2067134067456623358,
    1.3205493362551097165, 7.6885891670402045256, 8.5110993081578235626,
    8.6780074618241907628, 3.0393299495190765232, 4.8861603771931692837,
    1.6376807911141960987, 1.7976245206293959705, 1.1215174615596305635,
    9.2749875479069176988, 9.5535204436366135068, 2.3847390257490596706,
    5.2266014605411245934, 4.7626907296594220400, 6.3120136695399748893,
    6.5308938098334826605, 4.7601753065016353981, 9.5022522574487290774,
    2.9100899559134008158, 2.4703586803538474690, 4.1262395349613574467,
    6.2353186658230022600, 8.5339382743833760838, 7.6923034130379212211,
    8.7187825564518296911, 4.8159180824387925358, 7.3233232727544070737,
    2.2869093550400528443, 7.7723701798010009365, 1.2920431166599249468,
    6.1974921416331075138, 9.6954387240502546590, 5.9339095757428610181,
    8.6687810381748082557, 2.3760539514834522382, 8.6657522212958785394,
    7.5352480427187968629, 8.8620578316528506612, 3.0607032757276555359,
    5.5622441700033367561, 2.1995814426362828914, 2.7746180891451265003,
    7.1220536094407450066, 2.3754997922137843892, 6.8939949707392127082,
    5.6909032958059988240, 4.5499957543921036130, 3.9337821906751270999,
    5.2074172740366507586, 3.6947442999889076089, 1.3545747601429844684,
    3.1528100024666408898, 7.9312259790662049973, 4.3763384241503989509,
    3.3333117910222320501, 1.0501228378854706472, 1.3073480829984527498,
    8.5730272912632550132, 4.7909364951539828292, 3.3709356534806555657,
    7.4235493266783790976, 2.2979941960042198738, 6.2337520539522746795,
    8.7868116678039141732, 2.5561564957509434806, 9.5521238229494860609,
    4.9181427435268039524, 2.3577309261710693874, 9.9784717145029692575,
    7.3841089414410186852, 9.0353256751021825224, 5.3711852119892479368,
    7.9202399170288030832, 7.6157096820764547211, 5.3716309700110915931,
    1.9610192173448830621, 5.9851064420134536686, 1.7859296260278293253,
    1.3748759987532557207, 4.5066177201224132545, 8.9433068091082472010,
    2.2629665047041773393, 1.8064804420203532950, 2.3125112386777671208,
    3.3892686140347267863, 2.1152314048317239498, 5.9140360386018838344,
    2.2330079109896016055, 2.2649666604576209897, 6.7659704590067049852,
    7.0565225183388460009, 8.4956218452162122975, 6.9160510147495635141,
    3.9786279922305527631, 3.3900418681436230419, 4.2400619808391216095,
    9.1638566907773994932, 3.7820373909490591841, 7.5093281309211560329,
    4.5028960590786856495};

  double irdata[] =
    {0.51808497138722998501, -0.70857390061757536883,
    0.24370456692855837468, -0.25583566973438555922,
    0.069852516386041795215, 0.37431812431430000296,
    0.47807357196866160993, 0.14984503370442918840,
    0.16771669882677298955, -0.16976257865058908212,
    -0.77779105513225008039, 0.66099063131781145480,
    -1.0730679391297656556, 0.35628838908728139026,
    -0.38394067365621157542, 0.067668488397504438876,
    0.62209580672083300579, 0.71142675005426272909,
    0.37757554504552423235, 0.33003310410871651293,
    -0.21663113442171068735, -1.3109753179161073067,
    0.13281500172046273097, -0.30217247217582392311,
    0.099874410910360933269, 0.016496999512194830994,
    -0.10985735151338967042, 0.15875333391232774679,
    0.25201108910627573735, 0.078307509250781706000,
    0.059070694028293742968, 0.043088996384404326880,
    -0.31329117217201880760, -0.61285719826909513901,
    1.0249399866119883770, -0.30646131209924307198,
    0.22930245100245167915, -0.063682700009122195123,
    -0.42354273055066786580, -0.76300883953737119482,
    -0.39359092171190648022, -0.25143698277549470214,
    0.044285791087211784852, 1.3300756721899736342,
    0.32324015140887773936, -0.62898613703563482660,
    0.24360848159109499516, 0.068160640826636402856,
    -0.20305355696711385041, 0.39707355533781159186,
    0.77553187324747291437, 0.28813403458899287650,
    0.10856174882130438977, -0.13534692739262753324,
    -0.99684685451944736836, 0.056770889156061563472,
    -0.24849100716173388260, 0.056528788517852101270,
    0.12360612942355774820, 0.0042539620790821497910,
    -0.019280533981070587736, 0.31261038290616798106,
    0.079482114636840564573, 0.15181312440074285966,
    0.038582790749362207226, -0.45069930774293357127,
    -0.094795688036352882533, 0.48507979384491117634,
    -0.21319459961881940489, -0.15560333030444685554,
    0.18621666755116641512, -0.25571262972494352351,
    -0.61409090243111994389, -0.19551611391777643446,
    -0.095086458425480379998, 0.12741556123459498879,
    0.69801608408167720274, -0.018091382941370773137,
    -0.10048499007281334408, -0.026646532955298742046,
    0.051474980103825296561, -0.013024039788026730382,
    -0.023469329999609729975, 0.22381074329700747413,
    0.082573415488843225933, 0.016252375485783518499,
    0.043654138461523739832, -0.15057346887762517451,
    -0.47194705071251368340, 0.76269852585159859937,
    -0.22401202205208346028, 0.18557175136440564749,
    0.052656074062589553884, -0.43280220750672551575,
    -0.47467405683316352324, -0.23690533640269108044,
    -0.21225640742410415452, 0.20223099101883735220,
    0.80035323740851087594, -0.67906083022123750103,
    1.0648338631392138432, -0.27683580407288880399,
    0.27977708161290360567, 0.0047362862289660504551,
    -0.64471433245063824117, -0.89333125995981805954,
    -0.32908384693491167998, -0.24815559294248426094,
    0.12736152053235965008, 1.3790181178140657968,
    0.20297895732714047400, -0.18362822759019062824,
    0.0047315053221717758983, -0.13118039869708831974,
    0.069318755839082290211, 0.20457563836319422912,
    -0.046139640498380128813, 0.089336637461082045470,
    -0.056106495685397370837, -0.055279203000391777184,
    -0.10928979435700971421};

  matrix<double> rm(11,11,rdata);
  matrix<double> irm(11,11,irdata);
  const matrix<double> rorig = rm;

  rm.invert();
  matrix<double> rdiff1 = rm - irm;

  rdiff1.clean_small_numbers();
  cout << "Taking inverse of random 11x11 real matrix and comparing with known inverse\n"
       "elements smaller than " << MATRIX_ELEMENT_ROUND_OFF_LIMIT << " set to zero"<< endl;
  rdiff1.print();
  rm.invert();
  cout << "taking inverse of inverse and comparing with original matrix" << endl;
  matrix<double> rdiff2 = rm - rorig;
  rdiff2.clean_small_numbers();
  rdiff2.print();


  return 0;
}
