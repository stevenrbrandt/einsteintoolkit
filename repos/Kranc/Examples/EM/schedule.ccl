# File produced by Kranc

STORAGE: El_group[timelevels]

STORAGE: B_group[timelevels]

STORAGE: constraints[other_timelevels]

STORAGE: endens[other_timelevels]

STORAGE: B_grouprhs[rhs_timelevels]

STORAGE: El_grouprhs[rhs_timelevels]
schedule EM_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule EM_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule EM_initial at CCTK_INITIAL
{
  LANG: C
  READS: grid::x(Everywhere)
  READS: grid::y(Everywhere)
  WRITES: EM::B1(Everywhere)
  WRITES: EM::B2(Everywhere)
  WRITES: EM::B3(Everywhere)
  WRITES: EM::El1(Everywhere)
  WRITES: EM::El2(Everywhere)
  WRITES: EM::El3(Everywhere)
} "EM_initial"

schedule EM_evol in MoL_CalcRHS
{
  LANG: C
  READS: EM::B1(Everywhere)
  READS: EM::B2(Everywhere)
  READS: EM::B3(Everywhere)
  READS: EM::El1(Everywhere)
  READS: EM::El2(Everywhere)
  READS: EM::El3(Everywhere)
  WRITES: EM::B1rhs(Interior)
  WRITES: EM::B2rhs(Interior)
  WRITES: EM::B3rhs(Interior)
  WRITES: EM::El1rhs(Interior)
  WRITES: EM::El2rhs(Interior)
  WRITES: EM::El3rhs(Interior)
} "EM_evol"

schedule group EM_constraints_group in MoL_PseudoEvolution
{
} "EM_constraints"

schedule EM_constraints in EM_constraints_group
{
  LANG: C
  READS: EM::B1(Everywhere)
  READS: EM::B2(Everywhere)
  READS: EM::B3(Everywhere)
  READS: EM::El1(Everywhere)
  READS: EM::El2(Everywhere)
  READS: EM::El3(Everywhere)
  WRITES: EM::CB(Interior)
  WRITES: EM::CEl(Interior)
} "EM_constraints"

schedule EM_constraints_SelectBCs in EM_constraints_bc_group
{
  LANG: C
  OPTIONS: level
  SYNC: constraints
} "EM_constraints_SelectBCs"

schedule group ApplyBCs as EM_constraints_ApplyBCs in EM_constraints_bc_group after EM_constraints_SelectBCs
{
} "Apply BCs for groups set in EM_constraints"

schedule group EM_constraints_bc_group in EM_constraints_group after EM_constraints
{
} "EM_constraints"

schedule group EM_constraints_bc_group in MoL_PseudoEvolutionBoundaries after MoL_PostStep
{
} "EM_constraints"

schedule group EM_energy_group in MoL_PseudoEvolution
{
} "EM_energy"

schedule EM_energy in EM_energy_group
{
  LANG: C
  READS: EM::B1(Everywhere)
  READS: EM::B2(Everywhere)
  READS: EM::B3(Everywhere)
  READS: EM::El1(Everywhere)
  READS: EM::El2(Everywhere)
  READS: EM::El3(Everywhere)
  WRITES: EM::rho(Interior)
} "EM_energy"

schedule EM_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: El_group
  SYNC: B_group
} "select boundary conditions"

schedule EM_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule EM_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"
schedule group ApplyBCs as EM_ApplyBCs in MoL_PostStep after EM_SelectBoundConds
{
} "Apply boundary conditions controlled by thorn Boundary"
