# File produced by Kranc

implements: Euler

inherits:   Boundary GenericFD Grid



USES INCLUDE: loopcontrol.h
USES INCLUDE: Symmetry.h
USES INCLUDE: Boundary.h

CCTK_INT FUNCTION MoLRegisterEvolved(CCTK_INT IN EvolvedIndex, CCTK_INT IN RHSIndex)
USES FUNCTION MoLRegisterEvolved

SUBROUTINE Diff_coeff(CCTK_POINTER_TO_CONST IN cctkGH, CCTK_INT IN dir, CCTK_INT IN nsize, CCTK_INT OUT ARRAY imin, CCTK_INT OUT ARRAY imax, CCTK_REAL OUT ARRAY q, CCTK_INT IN table_handle)
USES FUNCTION Diff_coeff

CCTK_INT FUNCTION MultiPatch_GetMap(CCTK_POINTER_TO_CONST IN cctkGH)
USES FUNCTION MultiPatch_GetMap

CCTK_INT FUNCTION MultiPatch_GetBbox(CCTK_POINTER_TO_CONST IN cctkGH, CCTK_INT IN size, CCTK_INT OUT ARRAY bbox)
USES FUNCTION MultiPatch_GetBbox

CCTK_INT FUNCTION GetBoundarySpecification(CCTK_INT IN size, CCTK_INT OUT ARRAY nboundaryzones, CCTK_INT OUT ARRAY is_internal, CCTK_INT OUT ARRAY is_staggered, CCTK_INT OUT ARRAY shiftout)
USES FUNCTION GetBoundarySpecification

CCTK_INT FUNCTION MultiPatch_GetBoundarySpecification(CCTK_INT IN map, CCTK_INT IN size, CCTK_INT OUT ARRAY nboundaryzones, CCTK_INT OUT ARRAY is_internal, CCTK_INT OUT ARRAY is_staggered, CCTK_INT OUT ARRAY shiftout)
USES FUNCTION MultiPatch_GetBoundarySpecification

CCTK_INT FUNCTION SymmetryTableHandleForGrid(CCTK_POINTER_TO_CONST IN cctkGH)
USES FUNCTION SymmetryTableHandleForGrid

CCTK_INT FUNCTION Boundary_SelectGroupForBC(CCTK_POINTER_TO_CONST IN GH, CCTK_INT IN faces, CCTK_INT IN boundary_width, CCTK_INT IN table_handle, CCTK_STRING IN group_name, CCTK_STRING IN bc_name)
USES FUNCTION Boundary_SelectGroupForBC

CCTK_INT FUNCTION Boundary_SelectVarForBC(CCTK_POINTER_TO_CONST IN GH, CCTK_INT IN faces, CCTK_INT IN boundary_width, CCTK_INT IN table_handle, CCTK_STRING IN var_name, CCTK_STRING IN bc_name)
USES FUNCTION Boundary_SelectVarForBC

public:
CCTK_REAL Den_group type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0'
{
  Den
} "Den_group"

public:
CCTK_REAL S_group type=GF timelevels=3 tags='tensortypealias="U" tensorweight=0'
{
  S1,
  S2,
  S3
} "S_group"

public:
CCTK_REAL En_group type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0'
{
  En
} "En_group"

public:
CCTK_REAL rho_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  rho
} "rho_group"

public:
CCTK_REAL v_group type=GF timelevels=1 tags='tensortypealias="U" tensorweight=0'
{
  v1,
  v2,
  v3
} "v_group"

public:
CCTK_REAL p_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  p
} "p_group"

public:
CCTK_REAL DenF_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  DenF
} "DenF_group"

public:
CCTK_REAL DenRight_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  DenRight
} "DenRight_group"

public:
CCTK_REAL DenLeft_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  DenLeft
} "DenLeft_group"

public:
CCTK_REAL SF_group type=GF timelevels=1 tags='tensortypealias="U" tensorweight=0'
{
  SF1,
  SF2,
  SF3
} "SF_group"

public:
CCTK_REAL SRight_group type=GF timelevels=1 tags='tensortypealias="U" tensorweight=0'
{
  SRight1,
  SRight2,
  SRight3
} "SRight_group"

public:
CCTK_REAL SLeft_group type=GF timelevels=1 tags='tensortypealias="U" tensorweight=0'
{
  SLeft1,
  SLeft2,
  SLeft3
} "SLeft_group"

public:
CCTK_REAL EnF_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  EnF
} "EnF_group"

public:
CCTK_REAL EnRight_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  EnRight
} "EnRight_group"

public:
CCTK_REAL EnLeft_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  EnLeft
} "EnLeft_group"

public:
CCTK_REAL rhoLeft_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  rhoLeft
} "rhoLeft_group"

public:
CCTK_REAL rhoRight_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  rhoRight
} "rhoRight_group"

public:
CCTK_REAL vLeft_group type=GF timelevels=1 tags='tensortypealias="U" tensorweight=0'
{
  vLeft1,
  vLeft2,
  vLeft3
} "vLeft_group"

public:
CCTK_REAL vRight_group type=GF timelevels=1 tags='tensortypealias="U" tensorweight=0'
{
  vRight1,
  vRight2,
  vRight3
} "vRight_group"

public:
CCTK_REAL pLeft_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  pLeft
} "pLeft_group"

public:
CCTK_REAL pRight_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  pRight
} "pRight_group"

public:
CCTK_REAL Den_grouprhs type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0 Prolongation="None"'
{
  Denrhs
} "Den_grouprhs"

public:
CCTK_REAL En_grouprhs type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0 Prolongation="None"'
{
  Enrhs
} "En_grouprhs"

public:
CCTK_REAL S_grouprhs type=GF timelevels=3 tags='tensortypealias="U" tensorweight=0 Prolongation="None"'
{
  S1rhs,
  S2rhs,
  S3rhs
} "S_grouprhs"
