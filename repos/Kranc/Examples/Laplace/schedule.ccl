# File produced by Kranc

STORAGE: phi_group[timelevels]

STORAGE: phi_grouprhs[rhs_timelevels]
schedule Laplace_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule Laplace_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule Laplace_initial AT INITIAL
{
  LANG: C
  SYNC: phi_group
  READS: grid::x(Everywhere)
  READS: grid::y(Everywhere)
  WRITES: Laplace::phi(Interior)
} "Laplace_initial"

schedule Laplace_initial_boundary AT INITIAL after Laplace_initial
{
  LANG: C
  SYNC: phi_group
  READS: grid::y(Everywhere)
  WRITES: Laplace::phi(Boundary)
} "Laplace_initial_boundary"

schedule Laplace_relax in MoL_CalcRHS
{
  LANG: C
  READS: Laplace::phi(Everywhere)
  WRITES: Laplace::phirhs(Interior)
} "Laplace_relax"

schedule Laplace_relax AT ANALYSIS
{
  LANG: C
  SYNC: phi_grouprhs
  READS: Laplace::phi(Everywhere)
  WRITES: Laplace::phirhs(Interior)
} "Laplace_relax"

schedule Laplace_boundary in MoL_RHSBoundaries
{
  LANG: C
  WRITES: Laplace::phirhs(Boundary)
} "Laplace_boundary"

schedule Laplace_boundary AT ANALYSIS
{
  LANG: C
  SYNC: phi_grouprhs
  WRITES: Laplace::phirhs(Boundary)
} "Laplace_boundary"

schedule Laplace_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: phi_group
} "select boundary conditions"

schedule Laplace_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule Laplace_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"
schedule group ApplyBCs as Laplace_ApplyBCs in MoL_PostStep after Laplace_SelectBoundConds
{
} "Apply boundary conditions controlled by thorn Boundary"
