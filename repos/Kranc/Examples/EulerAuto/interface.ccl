# File produced by Kranc

implements: EulerAuto

inherits:   Boundary GenericFD Grid



USES INCLUDE: loopcontrol.h
USES INCLUDE: Symmetry.h
USES INCLUDE: Boundary.h

CCTK_INT FUNCTION MoLRegisterEvolved(CCTK_INT IN EvolvedIndex, CCTK_INT IN RHSIndex)
USES FUNCTION MoLRegisterEvolved

SUBROUTINE Diff_coeff(CCTK_POINTER_TO_CONST IN cctkGH, CCTK_INT IN dir, CCTK_INT IN nsize, CCTK_INT OUT ARRAY imin, CCTK_INT OUT ARRAY imax, CCTK_REAL OUT ARRAY q, CCTK_INT IN table_handle)
USES FUNCTION Diff_coeff

CCTK_INT FUNCTION MultiPatch_GetMap(CCTK_POINTER_TO_CONST IN cctkGH)
USES FUNCTION MultiPatch_GetMap

CCTK_INT FUNCTION MultiPatch_GetBbox(CCTK_POINTER_TO_CONST IN cctkGH, CCTK_INT IN size, CCTK_INT OUT ARRAY bbox)
USES FUNCTION MultiPatch_GetBbox

CCTK_INT FUNCTION GetBoundarySpecification(CCTK_INT IN size, CCTK_INT OUT ARRAY nboundaryzones, CCTK_INT OUT ARRAY is_internal, CCTK_INT OUT ARRAY is_staggered, CCTK_INT OUT ARRAY shiftout)
USES FUNCTION GetBoundarySpecification

CCTK_INT FUNCTION MultiPatch_GetBoundarySpecification(CCTK_INT IN map, CCTK_INT IN size, CCTK_INT OUT ARRAY nboundaryzones, CCTK_INT OUT ARRAY is_internal, CCTK_INT OUT ARRAY is_staggered, CCTK_INT OUT ARRAY shiftout)
USES FUNCTION MultiPatch_GetBoundarySpecification

CCTK_INT FUNCTION SymmetryTableHandleForGrid(CCTK_POINTER_TO_CONST IN cctkGH)
USES FUNCTION SymmetryTableHandleForGrid

CCTK_INT FUNCTION Boundary_SelectGroupForBC(CCTK_POINTER_TO_CONST IN GH, CCTK_INT IN faces, CCTK_INT IN boundary_width, CCTK_INT IN table_handle, CCTK_STRING IN group_name, CCTK_STRING IN bc_name)
USES FUNCTION Boundary_SelectGroupForBC

CCTK_INT FUNCTION Boundary_SelectVarForBC(CCTK_POINTER_TO_CONST IN GH, CCTK_INT IN faces, CCTK_INT IN boundary_width, CCTK_INT IN table_handle, CCTK_STRING IN var_name, CCTK_STRING IN bc_name)
USES FUNCTION Boundary_SelectVarForBC

public:
CCTK_REAL Den_group type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0'
{
  Den
} "Den_group"

public:
CCTK_REAL S_group type=GF timelevels=3 tags='tensortypealias="U" tensorweight=0'
{
  S1,
  S2,
  S3
} "S_group"

public:
CCTK_REAL En_group type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0'
{
  En
} "En_group"

public:
CCTK_REAL rho_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  rho
} "rho_group"

public:
CCTK_REAL v_group type=GF timelevels=1 tags='tensortypealias="U" tensorweight=0'
{
  v1,
  v2,
  v3
} "v_group"

public:
CCTK_REAL p_group type=GF timelevels=1 tags='tensortypealias="Scalar" tensorweight=0'
{
  p
} "p_group"

public:
CCTK_REAL Den_flux_group type=GF timelevels=1 tags=''
{
  DenFlux
} "Den_flux_group"

public:
CCTK_REAL Den_lr_group type=GF timelevels=1 tags=''
{
  DenLeft,
  DenRight
} "Den_lr_group"

public:
CCTK_REAL En_flux_group type=GF timelevels=1 tags=''
{
  EnFlux
} "En_flux_group"

public:
CCTK_REAL En_lr_group type=GF timelevels=1 tags=''
{
  EnLeft,
  EnRight
} "En_lr_group"

public:
CCTK_REAL p_lr_group type=GF timelevels=1 tags=''
{
  pLeft,
  pRight
} "p_lr_group"

public:
CCTK_REAL rho_lr_group type=GF timelevels=1 tags=''
{
  rhoLeft,
  rhoRight
} "rho_lr_group"

public:
CCTK_REAL S1_flux_group type=GF timelevels=1 tags=''
{
  S1Flux
} "S1_flux_group"

public:
CCTK_REAL S1_lr_group type=GF timelevels=1 tags=''
{
  S1Left,
  S1Right
} "S1_lr_group"

public:
CCTK_REAL S2_flux_group type=GF timelevels=1 tags=''
{
  S2Flux
} "S2_flux_group"

public:
CCTK_REAL S2_lr_group type=GF timelevels=1 tags=''
{
  S2Left,
  S2Right
} "S2_lr_group"

public:
CCTK_REAL S3_flux_group type=GF timelevels=1 tags=''
{
  S3Flux
} "S3_flux_group"

public:
CCTK_REAL S3_lr_group type=GF timelevels=1 tags=''
{
  S3Left,
  S3Right
} "S3_lr_group"

public:
CCTK_REAL v1_lr_group type=GF timelevels=1 tags=''
{
  v1Left,
  v1Right
} "v1_lr_group"

public:
CCTK_REAL v2_lr_group type=GF timelevels=1 tags=''
{
  v2Left,
  v2Right
} "v2_lr_group"

public:
CCTK_REAL v3_lr_group type=GF timelevels=1 tags=''
{
  v3Left,
  v3Right
} "v3_lr_group"

public:
CCTK_REAL Den_grouprhs type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0 Prolongation="None"'
{
  Denrhs
} "Den_grouprhs"

public:
CCTK_REAL En_grouprhs type=GF timelevels=3 tags='tensortypealias="Scalar" tensorweight=0 Prolongation="None"'
{
  Enrhs
} "En_grouprhs"

public:
CCTK_REAL S_grouprhs type=GF timelevels=3 tags='tensortypealias="U" tensorweight=0 Prolongation="None"'
{
  S1rhs,
  S2rhs,
  S3rhs
} "S_grouprhs"
