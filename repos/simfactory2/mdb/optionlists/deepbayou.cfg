# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = qb2-mvapich2-2020-07-29

CPP = cpp
FPP = cpp
CC  = icc
CXX = icc
F90 = ifort

CPPFLAGS = -DMPICH_IGNORE_CXX_SEEK
FPPFLAGS = -traditional

CFLAGS   = -align -std=gnu99 -U__STRICT_ANSI__ -g -xHOST -diag-disable 10397
CXXFLAGS = -align -std=gnu++11 -gxx-name=g++ -U__STRICT_ANSI__ -g  -xHOST -diag-disable 10397 -D__builtin_signbit=__signbit
F90FLAGS = -g -align -pad -xHOST -diag-disable 10397

# do not export symbols from hwloc so that it is not used by libmpich
LDFLAGS  = -rdynamic 
LIBDIRS = 
LIBS    = ifcore

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

# -check-uninit fails for asm output operands
DEBUG           = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = -O0 # -check-uninit
CXX_DEBUG_FLAGS = -O0 # -check-uninit
F90_DEBUG_FLAGS = -O0 -check bounds -check format # -check all

OPTIMISE           = yes
CPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
C_OPTIMISE_FLAGS   = -O2
CXX_OPTIMISE_FLAGS = -O2
F90_OPTIMISE_FLAGS = -O2

PROFILE           = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP           = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -D_OPENMP
C_OPENMP_FLAGS   = -fopenmp
CXX_OPENMP_FLAGS = -fopenmp
F90_OPENMP_FLAGS = -fopenmp

WARN           = yes
CPP_WARN_FLAGS = 
FPP_WARN_FLAGS = 
C_WARN_FLAGS   = 
CXX_WARN_FLAGS = 
F90_WARN_FLAGS = 



BLAS_DIR  = NO_BUILD
BLAS_LIBS = -mkl

# we cannot use the system HDF5 since we want to link statically and detect.sh
# hard-codes using libsz.a which is not available.
HDF5_DIR = BUILD

HWLOC_DIR = BUILD

LAPACK_DIR  = NO_BUILD
LAPACK_LIBS = -mkl

OPENBLAS_DIR = NO_BUILD
OPENBLAS_LIBS = -mkl

PETSC_DIR                   = BUILD

PTHREADS_DIR = NO_BUILD
