# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = summit-2020-05-03

CPP = cpp
FPP = cpp
CC = gcc
CXX = g++
F90 = gfortran
CUCC = nvcc

CPPFLAGS = -DOMPI_SKIP_MPICXX
FPPFLAGS = -traditional
CFLAGS = -pipe -g3 -fno-omit-frame-pointer -std=gnu11 -mcpu=power9
CXXFLAGS = -pipe -g3 -fno-omit-frame-pointer -std=gnu++14 -mcpu=power9
F90FLAGS = -pipe -g3 -fno-omit-frame-pointer -fcray-pointer -ffixed-line-length-none -mcpu=power9
CUCCFLAGS = -std=c++14

# LDFLAGS =
LIBDIRS = ${CUDA_TOOLKIT_ROOT_DIR}/lib64
LIBS = cudart gfortran

BEGIN_WHOLE_ARCHIVE_FLAGS = -Wl,--whole-archive
END_WHOLE_ARCHIVE_FLAGS = -Wl,--no-whole-archive

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

INTEGER_PRECISION = 4
REAL_PRECISION = 8

VECTORISE = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_ALIGN_FOR_CACHE = yes
VECTORISE_ALIGN_INTERIOR = no
VECTORISE_INLINE = no

DEBUG = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS = -fbounds-check -fstack-protector-all -ftrapv
CXX_DEBUG_FLAGS = -fbounds-check -fstack-protector-all -ftrapv
F90_DEBUG_FLAGS = -fcheck=bounds,do,mem,pointer,recursion -finit-character=65 -finit-integer=42424242 -finit-real=nan -fstack-protector-all -ftrapv

OPTIMISE = yes
CPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS = # -DCARPET_OPTIMISE -DNDEBUG
# C_OPTIMISE_FLAGS = -Ofast
# CXX_OPTIMISE_FLAGS = -Ofast
# F90_OPTIMISE_FLAGS = -Ofast
C_OPTIMISE_FLAGS = -O3 -fno-math-errno -fno-trapping-math -fno-rounding-math -fno-signaling-nans -fcx-limited-range -funsafe-math-optimizations
CXX_OPTIMISE_FLAGS = -O3 -fno-math-errno -fno-trapping-math -fno-rounding-math -fno-signaling-nans -fcx-limited-range -funsafe-math-optimizations
F90_OPTIMISE_FLAGS = -O3 -fno-math-errno -fno-trapping-math -fno-rounding-math -fno-signaling-nans -fcx-limited-range -funsafe-math-optimizations

PROFILE = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS = -pg
CXX_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -fopenmp
C_OPENMP_FLAGS = -fopenmp
CXX_OPENMP_FLAGS = -fopenmp
F90_OPENMP_FLAGS = -fopenmp

# -Wuninitialized is not supported without -O
WARN = yes
CPP_WARN_FLAGS = -Wall
FPP_WARN_FLAGS = -Wall
C_WARN_FLAGS = -Wall -Wno-unused-local-typedefs -Wfloat-conversion
CXX_WARN_FLAGS = -Wall -Wno-unused-local-typedefs -Wfloat-conversion
F90_WARN_FLAGS = -Wall -Wno-missing-include-dirs



# BLAS_DIR = BUILD

BOOST_DIR = ${OLCF_BOOST_ROOT}
BOOST_LIBNAME_SUFFIX = -mt

FFTW3_DIR = ${OLCF_FFTW_ROOT}

CURL_DIR = ${OLCF_CURL_ROOT}

FLICKCURL_DIR = BUILD

GSL_DIR = ${OLCF_GSL_ROOT}

HDF5_DIR = ${OLCF_HDF5_ROOT}
HDF5_INC_DIRS = ${OLCF_HDF5_ROOT}/include
HDF5_LIB_DIRS = ${OLCF_HDF5_ROOT}/include
HDF5_LIBS = hdf5_tools hdf5_hl_cpp hdf5_hl_f90cstub hdf5_hl_fortran hdf5_hl hdf5_cpp hdf5_f90cstub hdf5_fortran hdf5

HWLOC_DIR = ${OLCF_HWLOC_ROOT}

HYPRE_DIR = ${OLCF_HYPRE_ROOT}
HYPRE_INT8 = 0

MPI_DIR = ${MPI_ROOT}

OPENBLAS_DIR = ${OLCF_OPENBLAS_ROOT}
OPENBLAS_INT8 = 0

LAPACK_DIR = ${OLCF_OPENBLAS_ROOT}
LAPACK_LIBS = openblas

BLAS_DIR = ${OLCF_OPENBLAS_ROOT}
BLAS_LIBS = openblas

OPENSSL_DIR = NO_BUILD

PAPI_DIR = ${OLCF_PAPI_ROOT}

PETSC_DIR = ${OLCF_PETSC_ROOT}
PETSC_ARCH_LIBS = petsc

PTHREADS_DIR = NO_BUILD

ZLIB_DIR = ${OLCF_ZLIB_ROOT}
