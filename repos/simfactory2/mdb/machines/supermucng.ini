[supermuc-ng]

# last-tested-on: 2020-02-14
# last-tested-by: Roland Haas <rhaas@ncsa.illinois.edu>

# Machine description
nickname        = supermucng
name            = SuperMUC-NG
location        = LRZ
description     = A supercomputer of the Leibniz Supercomputing Centre (LRZ) of the Bavarian Academy of Sciences.
webpage         = https://doku.lrz.de/display/PUBLIC/SuperMUC-NG
status          = experimental

# Access to this machine
hostname        = skx.supermuc.lrz.de
envsetup        = <<EOT
module unload intel-mkl
module unload intel-mpi
module unload intel
module unload gcc
module load gmake/4.2.1 &&
module load intel/19.0 &&
module load intel-mkl/2019 &&
module load gcc/9 &&
module load intel-mpi/2019-intel &&
module load libszip/2.1.1 &&
module load numactl/2.0.12-intel19 &&
module load hdf5/1.10.7-intel19 &&
module load gsl/2.5-intel19 &&
module load hwloc/2.2.0-gcc8 &&
module load papi/6.0.0.1-intel19 &&
module load fftw/3.3.8-intel19-impi-openmp &&
module load libszip/2.1.1
EOT
aliaspattern    = ^login\d\d.sng.lrz.de$

# Source tree management
# there is also $WORK_<project>
sourcebasedir   = /dss/dsshome1/<hash>/@USER@
disabled-thorns = <<EOT
EOT
enabled-thorns = <<EOT
EOT
optionlist      = supermucng.cfg
submitscript    = supermucng.sub
runscript       = supermucng.run
makejobs        = 2
make            = make -j@MAKEJOBS@

# Simulation management
# this section describes the "thin nodes"
basedir         = /hppfs/scratch/<hash>/@USER@/simulations
cpu             = Intel Skylake Xeon Platinum 8174
cpufreq         = 3.1
flop/cycle      = 16
max-num-smt     = 2
num-smt         = 1
ppn             = 48
spn             = 2
mpn             = 2
max-num-threads = 48
num-threads     = 2
memory          = 98304
nodes           = 6336
min-ppn         = 48
allocation      = NO_ALLOCATION
# queues are: test, micro, general, large (https://doku.lrz.de/display/PUBLIC/Job+Processing+with+SLURM+on+SuperMUC-NG)
# TODO: use some @(python-code)@ tricks to auto-choose it?
queue           = general
maxwalltime     = 48:00:00      # test has 0:30:0, large has 24:0:0
#maxqueueslots   = 25            # there are 50, but jobs can take 2 slots
submit          = sbatch --export=ALL @SCRIPTFILE@ && sleep 5
getstatus       = squeue -j @JOB_ID@
stop            = scancel @JOB_ID@
submitpattern   = Submitted batch job ([0-9]+)
statuspattern   = '@JOB_ID@ '
queuedpattern   = ' PD '
runningpattern  = ' (CF|CG|R|TO) '
holdingpattern  = '\(JobHeldUser\)'
exechost        = hostname
exechostpattern = ^(\S+)
stdout          = cat @SIMULATION_NAME@.out
stderr          = cat @SIMULATION_NAME@.err
stdout-follow   = tail -n 100 -f @SIMULATION_NAME@.out @SIMULATION_NAME@.err
