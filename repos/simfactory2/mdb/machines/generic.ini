[generic]
# This machine description file is used internally by simfactory as a template
# during the sim setup and sim setup-silent commands
# Edit at your own risk

# Machine description
nickname        = generic
name            = Generic Machine
location        = somewhere
description     = Whatever
status          = personal

# Access to this machine
hostname        = generic.some.where
aliaspattern    = ^generic\.some\.where$
envsetup        = <<EOF
# the configure scripts strip /usr/local from XXX_DIR to avoid chosing system
# libraries, however not all compilers will search in there by default Here we
# explicitly add the filtered out locations so that they appear last in the
# search path removed by strip-libdirs.sh
export LIBRARY_PATH="${LIBRARY_PATH+$LIBRARY_PATH:}/usr/local/lib64:/usr/local/lib:/usr/lib64:/usr/lib:/lib64:/lib"
# removed by strip-incdirs.sh
export CPATH="${CPATH+$CPATH:}/usr/local/include:/usr/include:/include"
EOF


# Source tree management
sourcebasedir   = /home/@USER@
optionlist      = generic.cfg
submitscript    = generic.sub
runscript       = generic.run
make    	= make -j@MAKEJOBS@
basedir         = /home/@USER@/simulations
ppn             = 1   # or more
max-num-threads = 1   # or more
num-threads     = 1   # or more
nodes           = 1
submit          = exec nohup @SCRIPTFILE@ < /dev/null > @RUNDIR@/@SIMULATION_NAME@.out 2> @RUNDIR@/@SIMULATION_NAME@.err & echo $!
getstatus       = ps @JOB_ID@
# need to kill the whole set of processes descending from @JOB_ID@, not just the
# (simfactory) top-level process
stop            = pkill -g $(ps -o pgid= -p @JOB_ID@)
submitpattern   = (.*)
statuspattern   = "^ *@JOB_ID@ "
queuedpattern   = $^
runningpattern  = ^
holdingpattern  = $^
exechost        = echo localhost
exechostpattern = (.*)
stdout          = cat @SIMULATION_NAME@.out
stderr          = cat @SIMULATION_NAME@.err
stdout-follow   = tail -n 100 -f @SIMULATION_NAME@.out @SIMULATION_NAME@.err
