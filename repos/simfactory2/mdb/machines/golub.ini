[golub]

# Machine description
nickname        = golub
name            = golub
location        = NCSA
description     = An FDR based cluster at UIUC.
webpage         = https://campuscluster.illinois.edu
status          = experimental

# Access to this machine
hostname        = golub.campuscluster.illinois.edu
aliaspattern    = ^golubh\d\.campuscluster\.illinois\.edu$
envsetup        = <<EOT
    module unload mpi openmpi cuda python gsl gcc intel papi hwloc
    module load openmpi/4.0.5-intel-18.0 &&
    module load intel/18.0 &&
    module load gcc/7.2.0 &&
    module load cuda/10.0 &&
    module load git &&
    module load gsl/2.5 &&
    module load papi/5.6.0 &&
    module load hwloc/1.7.2
EOT

# Source tree management
sourcebasedir   = /projects/ncsa/grav/@USER@/ET
optionlist      = golub.cfg
submitscript    = golub.sub
runscript       = golub.run
# don't use more than 4 since the campus cluster kills processes if "they
# accrue more than 30 minutes of CPU time or if more than 4 identical processes
# owned by the same user are running concurrently."
makejobs        = 4
make            = make -j@MAKEJOBS@
basedir         = /home/@USER@/scratch/simulations
# you may need to specify the exact node type using one of the features
# reported by "sinfo -O features -N -n NODE" where NODE is one of the nodes in
# the partition you care about eg "scontrol show partition". Not doing so may
# result in getting a 24 core node when asking for a 20 core node with different
# NUMA setup which then confuses core binding.
ppn             = 24 # set to 16/20/24 to select the golub nodes you want
min-ppn         = 16
max-num-threads = 24
num-threads     = 12
memory          = 65536
nodes           = 208
# to ask for a particular "feature" add the feature after the queue name
# separated by a ":" eg. ncsa:E2670V2 to restrict to only the 20 cores nodes in
# the NCSA partition
queue           = secondary
# use sbatch's compatibility mode. Using qsub adds extra (incorrect) -o and -e
# options to the wrapped sbatch call
submit          = sbatch @SCRIPTFILE@ ; sleep 1
interactivecmd  = qsub -I -X -l nodes=@NODES@:ppn=@PPN@:golub -l walltime=@WALLTIME@ -l cput=@WALLTIME@
getstatus       = qstat @JOB_ID@
stop            = qdel @JOB_ID@
submitpattern   = ^Submitted batch job (\d+)$
statuspattern   = ^@JOB_ID@[. ]
queuedpattern   = " Q "
runningpattern  = " R "
holdingpattern  = " H "
exechost        = qstat -f @JOB_ID@
exechostpattern = exec_host = (\w+)/
stdout          = cat @SIMULATION_NAME@.out
stderr          = cat @SIMULATION_NAME@.err
stdout-follow   = tail -n 100 -f @SIMULATION_NAME@.out @SIMULATION_NAME@.err
