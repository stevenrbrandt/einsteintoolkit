# Schedule definitions for thorn WaveExtractL


# test if this makes a difference
STORAGE: MoncriefQ


# FIXME : 3D only for 3D corotation undoing
STORAGE: metric_tmp

if(active)
{
  STORAGE: sym_factor_group, handles_group, do_nothing_group

  # FIXME : This could be moved where it is needed
  STORAGE: gridsizes_group
  STORAGE: surface_arrays
  STORAGE: surface_integrands
  STORAGE: interp_metric_arrays
  STORAGE: Schwarzschild_Mass_Radius_group
  STORAGE: MoncriefQ_Results_group, Schwarzschild_Mass_Radius_Results_group
  STORAGE: current_detector_group,current_detector_radius_group
  STORAGE: my_out_every_det
  STORAGE: l_m_modes_info_group
  STORAGE: current_detector_group
  STORAGE: current_detector_radius_group

  schedule WavExtrL_ParamCheck at PARAMCHECK
  {
    LANG: C
  } "Check Parameters for WaveExtract"

  schedule WavExtrL_Startup at STARTUP AFTER IOUtil_Startup
  {
    LANG: C
  } "Register WaveExtract as an IO Method"



  # Initial Setup
  schedule WavExtrL_Init at BASEGRID after SpatialCoordinates
  {
    LANG: FORTRAN
  } "Setup weights for integration"


  schedule WavExtrL_Setup_Detectors at BASEGRID after SpatialCoordinates
  {
    LANG: FORTRAN
    OPTIONS: LEVEL
  } "Initial setup of all detectors"



  # Analysis
  if (use_spherical_surface) {
    schedule WavExtrL_Setup_SphericalSurface at BASEGRID AFTER SphericalSurface_Setup AFTER WavExtrL_ResetCurrDet
    {
      LANG: FORTRAN
      OPTIONS: LOCAL #GLOBAL
    } "setup detectors from spherical surface"
  }

  schedule WavExtrL_ResetCurrDet at ANALYSIS \
           before WavExtrL_CalcsAtDetector
  {
    LANG: C
    OPTIONS: GLOBAL
  } "Reset the value of the current_detector, needed for the while loop next"

  # Create a new group which contains all the calculations done at 
  # the detectors. The loop is over the detectors.
  # FIXME : LOTS OF STORAGE SHOULD ONLY BE TURNED ON IN THIS GROUP
  schedule group WavExtrL_CalcsAtDetector \
           while WaveExtractL::current_detector \
           at ANALYSIS after WavExtrL_ResetCurrDet
  {
  } "Calculations done for each detector, we loop over the detectors"

  schedule WavExtrL_SetupSphere in WavExtrL_CalcsAtDetector
  {
    LANG: FORTRAN
    OPTIONS: GLOBAL
  } "Setup sintheta, sinphi arrays"

  schedule WavExtrL_ProjectSphere in WavExtrL_CalcsAtDetector \
            after WavExtrL_SetupSphere
  {
    LANG: C #FORTRAN
    OPTIONS: GLOBAL
  } "Interpolate 3D quantities into 2D grid arrays (on the sphere), project onto sphere"

  schedule WavExtrL_SchwarzMassRad in WavExtrL_CalcsAtDetector \
           after WavExtrL_ProjectSphere
  {
    LANG: FORTRAN
    OPTIONS: GLOBAL
  } "Calculate Schwarzschild Radius and Mass and spherical background"

  if (subtract_spherical_background) {
    schedule WavExtrL_SubtrSpherMetric in WavExtrL_CalcsAtDetector \
             after WavExtrL_SchwarzMassRad
    {
      LANG: FORTRAN
      OPTIONS: GLOBAL
    } "Substract spherical background part of metric from metric"
  }

  schedule WavExtrL_MoncriefQ in WavExtrL_CalcsAtDetector \
           after WavExtrL_SubtrSpherMetric
  {
    LANG: FORTRAN
    OPTIONS: GLOBAL
  } "Compute Moncrief Qeven, Qodd from Regge Wheeler quantities"

  if (maximum_detector_number < switch_output_format)
  {
    schedule WavExtrL_WriteData in WavExtrL_CalcsAtDetector \
            after WavExtrL_MoncriefQ
    {
      LANG: C
      OPTIONS: GLOBAL
    } "Write out results to disk and stdout - one file for each detector and (l,m) mode"
    schedule WavExtrL_AdjustDetector in WavExtrL_CalcsAtDetector \
            after WavExtrL_WriteData
    {
      LANG: C
      OPTIONS: GLOBAL
    } "Decrease current_detector, go the the next detector"
  }
  else
  {
    schedule WavExtrL_AdjustDetector in WavExtrL_CalcsAtDetector \
            after WavExtrL_MoncriefQ
    {
      LANG: C
      OPTIONS: GLOBAL
    } "Decrease current_detector, go the the next detector"
  }

  schedule WavExtrL_TimerInfo in WavExtrL_CalcsAtDetector \
           after WavExtrL_AdjustDetector
  {
    LANG: C
    OPTIONS: GLOBAL
  } "Output Timer Info if requested"


  if (maximum_detector_number >= switch_output_format)
  {
    schedule WavExtrL_WriteLotsOfData after WavExtrL_CalcsAtDetector \
             at ANALYSIS
    {
      LANG: C
      OPTIONS: GLOBAL
    } "Output one file per (l,m) mode, all detectors in one file"
  }
}
